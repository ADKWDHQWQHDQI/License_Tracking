@{
    ViewData["Title"] = "Desktop Reports - Pipeline Analytics";
}

<div class="container-fluid">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2><i class="fas fa-desktop text-primary"></i> Desktop Pipeline Reports</h2>
            <p class="text-muted mb-0">Comprehensive desktop-optimized pipeline analytics and reporting suite</p>
        </div>
        <div class="btn-group">
            <a asp-action="Index" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left"></i> Back to Pipeline
            </a>
            <button class="btn btn-primary" onclick="refreshAllReports()">
                <i class="fas fa-sync-alt"></i> Refresh All
            </button>
            <div class="btn-group">
                <button type="button" class="btn btn-success dropdown-toggle" data-bs-toggle="dropdown">
                    <i class="fas fa-download"></i> Export
                </button>
                <ul class="dropdown-menu">
                    <li><a class="dropdown-item" onclick="exportToPDF()"><i class="fas fa-file-pdf"></i> PDF Report</a></li>
                    <li><a class="dropdown-item" onclick="exportToExcel()"><i class="fas fa-file-excel"></i> Excel Report</a></li>
                    <li><a class="dropdown-item" onclick="exportToCSV()"><i class="fas fa-file-csv"></i> CSV Data</a></li>
                </ul>
            </div>
        </div>
    </div>

    <!-- Loading Indicator -->
    <div id="loadingIndicator" class="text-center my-5" style="display: none;">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading reports...</span>
        </div>
        <p class="mt-2">Generating comprehensive reports...</p>
    </div>

    <!-- Executive Summary Dashboard -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0"><i class="fas fa-tachometer-alt text-primary"></i> Executive Summary Dashboard</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-xl-3 col-lg-4 col-md-6 mb-3">
                            <div class="card bg-primary text-white h-100">
                                <div class="card-body text-center">
                                    <i class="fas fa-chart-line fa-2x mb-2"></i>
                                    <h6>Total Pipeline Value</h6>
                                    <h3 id="totalPipelineValue">₹0</h3>
                                    <small id="pipelineGrowth">Pipeline overview</small>
                                </div>
                            </div>
                        </div>
                        <div class="col-xl-3 col-lg-4 col-md-6 mb-3">
                            <div class="card bg-success text-white h-100">
                                <div class="card-body text-center">
                                    <i class="fas fa-balance-scale fa-2x mb-2"></i>
                                    <h6>Weighted Revenue</h6>
                                    <h3 id="weightedRevenue">₹0</h3>
                                    <small id="conversionRate">Probability adjusted</small>
                                </div>
                            </div>
                        </div>
                        <div class="col-xl-3 col-lg-4 col-md-6 mb-3">
                            <div class="card bg-info text-white h-100">
                                <div class="card-body text-center">
                                    <i class="fas fa-handshake fa-2x mb-2"></i>
                                    <h6>Active Projects</h6>
                                    <h3 id="activeDeals">0</h3>
                                    <small id="dealVelocity">In pipeline</small>
                                </div>
                            </div>
                        </div>
                        <div class="col-xl-3 col-lg-4 col-md-6 mb-3">
                            <div class="card bg-warning text-white h-100">
                                <div class="card-body text-center">
                                    <i class="fas fa-percentage fa-2x mb-2"></i>
                                    <h6>Avg Success Rate</h6>
                                    <h3 id="successRate">0%</h3>
                                    <small id="confidenceLevel">Confidence level</small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Key Performance Indicators -->
    <div class="row mb-4">
        <div class="col-lg-8">
            <div class="card h-100">
                <div class="card-header">
                    <h6 class="mb-0"><i class="fas fa-chart-area text-success"></i> Pipeline Performance Trends</h6>
                </div>
                <div class="card-body">
                    <canvas id="pipelineTrendChart" height="300"></canvas>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card h-100">
                <div class="card-header">
                    <h6 class="mb-0"><i class="fas fa-chart-pie text-info"></i> Stage Distribution</h6>
                </div>
                <div class="card-body">
                    <canvas id="stageDistributionChart" height="300"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Detailed Analytics Tables -->
    <div class="row mb-4">
        <div class="col-lg-6">
            <div class="card h-100">
                <div class="card-header">
                    <h6 class="mb-0"><i class="fas fa-building text-primary"></i> OEM Partner Performance</h6>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-sm table-hover" id="oemPerformanceTable">
                            <thead class="table-dark">
                                <tr>
                                    <th>OEM Partner</th>
                                    <th>Projects</th>
                                    <th>Revenue</th>
                                    <th>Performance</th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- Will be populated by JavaScript -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card h-100">
                <div class="card-header">
                    <h6 class="mb-0"><i class="fas fa-tasks text-warning"></i> Pipeline Stage Analysis</h6>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-sm table-hover" id="stageAnalysisTable">
                            <thead class="table-dark">
                                <tr>
                                    <th>Stage</th>
                                    <th>Count</th>
                                    <th>Revenue</th>
                                    <th>Avg Confidence</th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- Will be populated by JavaScript -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Revenue Analysis Charts -->
    <div class="row mb-4">
        <div class="col-lg-8">
            <div class="card h-100">
                <div class="card-header">
                    <h6 class="mb-0"><i class="fas fa-chart-bar text-success"></i> Revenue by OEM Partner</h6>
                </div>
                <div class="card-body">
                    <canvas id="oemRevenueChart" height="300"></canvas>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card h-100">
                <div class="card-header">
                    <h6 class="mb-0"><i class="fas fa-chart-doughnut text-danger"></i> Revenue Distribution</h6>
                </div>
                <div class="card-body">
                    <canvas id="revenueDistributionChart" height="300"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- High-Value Deals Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h6 class="mb-0"><i class="fas fa-gem text-warning"></i> High-Value Deal Pipeline</h6>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover" id="highValueDealsTable">
                            <thead class="table-dark">
                                <tr>
                                    <th>Project</th>
                                    <th>Client</th>
                                    <th>Estimated Revenue</th>
                                    <th>Weighted Revenue</th>
                                    <th>Success Probability</th>
                                    <th>Stage</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- Will be populated by JavaScript -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Performance Metrics Grid -->
    <div class="row">
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card text-center">
                <div class="card-body">
                    <i class="fas fa-trophy fa-2x text-warning mb-2"></i>
                    <h6>High Confidence Deals</h6>
                    <h4 id="highConfidenceDeals" class="text-primary">0</h4>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card text-center">
                <div class="card-body">
                    <i class="fas fa-exclamation-triangle fa-2x text-danger mb-2"></i>
                    <h6>At Risk Deals</h6>
                    <h4 id="atRiskDeals" class="text-danger">0</h4>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card text-center">
                <div class="card-body">
                    <i class="fas fa-clock fa-2x text-info mb-2"></i>
                    <h6>Upcoming Closures</h6>
                    <h4 id="upcomingClosures" class="text-info">0</h4>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card text-center">
                <div class="card-body">
                    <i class="fas fa-calendar fa-2x text-success mb-2"></i>
                    <h6>This Month</h6>
                    <h4 id="projectsThisMonth" class="text-success">0</h4>
                </div>
            </div>
        </div>
    </div>
</div>
                            <i class="fas fa-target fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Advanced Analytics Tabs -->
    <div class="card mb-4">
        <div class="card-header">
            <ul class="nav nav-tabs card-header-tabs" id="reportTabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="overview-tab" data-bs-toggle="tab" data-bs-target="#overview" type="button" role="tab">
                        <i class="fas fa-tachometer-alt"></i> Overview
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="trends-tab" data-bs-toggle="tab" data-bs-target="#trends" type="button" role="tab">
                        <i class="fas fa-chart-area"></i> Trends
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="performance-tab" data-bs-toggle="tab" data-bs-target="#performance" type="button" role="tab">
                        <i class="fas fa-medal"></i> Performance
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="forecasting-tab" data-bs-toggle="tab" data-bs-target="#forecasting" type="button" role="tab">
                        <i class="fas fa-crystal-ball"></i> Forecasting
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="detailed-tab" data-bs-toggle="tab" data-bs-target="#detailed" type="button" role="tab">
                        <i class="fas fa-table"></i> Detailed Data
                    </button>
                </li>
            </ul>
        </div>
        <div class="card-body">
            <div class="tab-content" id="reportTabsContent">
                <!-- Overview Tab -->
                <div class="tab-pane fade show active" id="overview" role="tabpanel">
                    <div class="row">
                        <div class="col-lg-8">
                            <div class="card">
                                <div class="card-header">
                                    <h6 class="card-title mb-0">
                                        <i class="fas fa-chart-pie"></i> Pipeline Distribution by Stage
                                    </h6>
                                </div>
                                <div class="card-body">
                                    <canvas id="pipelineStageChart" height="300"></canvas>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="card">
                                <div class="card-header">
                                    <h6 class="card-title mb-0">
                                        <i class="fas fa-users"></i> Top OEM Partners
                                    </h6>
                                </div>
                                <div class="card-body">
                                    <div id="topOemsList">
                                        <!-- Populated via JavaScript -->
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row mt-4">
                        <div class="col-lg-6">
                            <div class="card">
                                <div class="card-header">
                                    <h6 class="card-title mb-0">
                                        <i class="fas fa-chart-bar"></i> Revenue by OEM
                                    </h6>
                                </div>
                                <div class="card-body">
                                    <canvas id="oemRevenueChart" height="250"></canvas>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="card">
                                <div class="card-header">
                                    <h6 class="card-title mb-0">
                                        <i class="fas fa-thermometer-half"></i> Pipeline Health
                                    </h6>
                                </div>
                                <div class="card-body">
                                    <div id="pipelineHealthMetrics">
                                        <!-- Populated via JavaScript -->
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Trends Tab -->
                <div class="tab-pane fade" id="trends" role="tabpanel">
                    <div class="row">
                        <div class="col-12">
                            <div class="card">
                                <div class="card-header">
                                    <h6 class="card-title mb-0">
                                        <i class="fas fa-chart-line"></i> Monthly Pipeline Growth Trends
                                    </h6>
                                </div>
                                <div class="card-body">
                                    <canvas id="monthlyTrendsChart" height="350"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row mt-4">
                        <div class="col-lg-6">
                            <div class="card">
                                <div class="card-header">
                                    <h6 class="card-title mb-0">
                                        <i class="fas fa-percentage"></i> Success Rate Trends
                                    </h6>
                                </div>
                                <div class="card-body">
                                    <canvas id="successRateTrendsChart" height="250"></canvas>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="card">
                                <div class="card-header">
                                    <h6 class="card-title mb-0">
                                        <i class="fas fa-clock"></i> Deal Velocity Analysis
                                    </h6>
                                </div>
                                <div class="card-body">
                                    <canvas id="dealVelocityChart" height="250"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Performance Tab -->
                <div class="tab-pane fade" id="performance" role="tabpanel">
                    <div class="row">
                        <div class="col-lg-8">
                            <div class="card">
                                <div class="card-header">
                                    <h6 class="card-title mb-0">
                                        <i class="fas fa-trophy"></i> Performance Scorecard
                                    </h6>
                                </div>
                                <div class="card-body">
                                    <div id="performanceScorecard">
                                        <!-- Populated via JavaScript -->
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="card">
                                <div class="card-header">
                                    <h6 class="card-title mb-0">
                                        <i class="fas fa-star"></i> Key Performance Indicators
                                    </h6>
                                </div>
                                <div class="card-body">
                                    <div id="kpiMetrics">
                                        <!-- Populated via JavaScript -->
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Forecasting Tab -->
                <div class="tab-pane fade" id="forecasting" role="tabpanel">
                    <div class="alert alert-info">
                        <i class="fas fa-info-circle"></i>
                        <strong>Note:</strong> Forecasting features focus on estimates and projections only, without predictive algorithms as per business requirements.
                    </div>
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="card">
                                <div class="card-header">
                                    <h6 class="card-title mb-0">
                                        <i class="fas fa-calendar-alt"></i> Quarterly Projections
                                    </h6>
                                </div>
                                <div class="card-body">
                                    <canvas id="quarterlyProjectionsChart" height="300"></canvas>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="card">
                                <div class="card-header">
                                    <h6 class="card-title mb-0">
                                        <i class="fas fa-calculator"></i> Weighted Revenue Analysis
                                    </h6>
                                </div>
                                <div class="card-body">
                                    <div id="weightedRevenueAnalysis">
                                        <!-- Populated via JavaScript -->
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Detailed Data Tab -->
                <div class="tab-pane fade" id="detailed" role="tabpanel">
                    <div class="card">
                        <div class="card-header">
                            <div class="d-flex justify-content-between align-items-center">
                                <h6 class="card-title mb-0">
                                    <i class="fas fa-database"></i> Detailed Pipeline Data
                                </h6>
                                <div class="btn-group btn-group-sm">
                                    <button class="btn btn-outline-primary" onclick="exportDetailedData('csv')">
                                        <i class="fas fa-file-csv"></i> CSV
                                    </button>
                                    <button class="btn btn-outline-success" onclick="exportDetailedData('excel')">
                                        <i class="fas fa-file-excel"></i> Excel
                                    </button>
                                </div>
                            </div>
                        </div>
            @section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    
    <script>
        let analyticsData = null;
        let charts = {};

        // Initialize reporting dashboard
        document.addEventListener('DOMContentLoaded', function() {
            loadReportData();
        });

        async function loadReportData() {
            try {
                showLoading(true);
                const response = await fetch('@Url.Action("GetPipelineAnalytics")');
                if (!response.ok) throw new Error('Failed to load analytics');
                
                analyticsData = await response.json();
                console.log('Desktop Reports Data:', analyticsData); // Debug log
                
                updateExecutiveSummary();
                initializeCharts();
                updateDetailedTables();
                updatePerformanceMetrics();
            } catch (error) {
                console.error('Error loading report data:', error);
                showError('Failed to load report data: ' + error.message);
            } finally {
                showLoading(false);
            }
        }

        function showLoading(show) {
            document.getElementById('loadingIndicator').style.display = show ? 'block' : 'none';
        }

        function updateExecutiveSummary() {
            if (!analyticsData) return;

            // Update executive summary cards
            document.getElementById('totalPipelineValue').textContent = 
                formatCurrency(analyticsData.totalEstimatedRevenue || 0);
            
            document.getElementById('weightedRevenue').textContent = 
                formatCurrency(analyticsData.totalWeightedRevenue || 0);
            
            document.getElementById('activeDeals').textContent = 
                analyticsData.activeProjects || 0;
            
            document.getElementById('successRate').textContent = 
                `${(analyticsData.averageSuccessProbability || 0).toFixed(1)}%`;

            // Update summary text
            document.getElementById('pipelineGrowth').textContent = 
                `${analyticsData.totalProjects || 0} total projects`;
            
            document.getElementById('conversionRate').textContent = 
                `${((analyticsData.totalWeightedRevenue || 0) / (analyticsData.totalEstimatedRevenue || 1) * 100).toFixed(1)}% conversion`;
            
            document.getElementById('dealVelocity').textContent = 
                `${analyticsData.totalProjects || 0} in pipeline`;
            
            document.getElementById('confidenceLevel').textContent = 
                `${(analyticsData.averageConfidenceLevel || 0).toFixed(1)}/5 confidence`;
        }

        function initializeCharts() {
            if (!analyticsData) return;

            // Destroy existing charts
            Object.values(charts).forEach(chart => chart.destroy());
            charts = {};

            // Pipeline Trend Chart
            const trendData = analyticsData.monthlyTrend || [];
            if (trendData.length > 0) {
                const trendCtx = document.getElementById('pipelineTrendChart').getContext('2d');
                charts.trend = new Chart(trendCtx, {
                    type: 'line',
                    data: {
                        labels: trendData.map(t => t.month || ''),
                        datasets: [{
                            label: 'Estimated Revenue',
                            data: trendData.map(t => t.estimatedRevenue || 0),
                            borderColor: '#007bff',
                            backgroundColor: 'rgba(0, 123, 255, 0.1)',
                            fill: true,
                            tension: 0.4
                        }, {
                            label: 'Weighted Revenue',
                            data: trendData.map(t => t.weightedRevenue || 0),
                            borderColor: '#28a745',
                            backgroundColor: 'rgba(40, 167, 69, 0.1)',
                            fill: true,
                            tension: 0.4
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    callback: function(value) {
                                        return formatCurrency(value);
                                    }
                                }
                            }
                        }
                    }
                });
            }

            // Stage Distribution Chart
            const stageData = analyticsData.projectsByStage || {};
            if (Object.keys(stageData).length > 0) {
                const stageCtx = document.getElementById('stageDistributionChart').getContext('2d');
                charts.stageDistribution = new Chart(stageCtx, {
                    type: 'doughnut',
                    data: {
                        labels: Object.keys(stageData),
                        datasets: [{
                            data: Object.values(stageData).map(s => s.count || 0),
                            backgroundColor: [
                                '#007bff', '#28a745', '#ffc107', '#dc3545', '#6c757d'
                            ],
                            borderWidth: 2,
                            borderColor: '#fff'
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'bottom'
                            }
                        }
                    }
                });
            }

            // OEM Revenue Chart
            const oemData = analyticsData.projectsByOem || {};
            if (Object.keys(oemData).length > 0) {
                const oemCtx = document.getElementById('oemRevenueChart').getContext('2d');
                charts.oemRevenue = new Chart(oemCtx, {
                    type: 'bar',
                    data: {
                        labels: Object.keys(oemData).map(name => name.length > 20 ? name.substring(0, 20) + '...' : name),
                        datasets: [{
                            label: 'Estimated Revenue',
                            data: Object.values(oemData).map(o => o.estimatedRevenue || 0),
                            backgroundColor: '#28a745',
                            borderColor: '#1e7e34',
                            borderWidth: 1
                        }, {
                            label: 'Weighted Revenue',
                            data: Object.values(oemData).map(o => o.weightedRevenue || 0),
                            backgroundColor: '#17a2b8',
                            borderColor: '#117a8b',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    callback: function(value) {
                                        return formatCurrency(value);
                                    }
                                }
                            }
                        }
                    }
                });
            }

            // Revenue Distribution Chart
            const topOems = Object.entries(oemData)
                .sort(([,a], [,b]) => (b.estimatedRevenue || 0) - (a.estimatedRevenue || 0))
                .slice(0, 5);

            if (topOems.length > 0) {
                const revenueCtx = document.getElementById('revenueDistributionChart').getContext('2d');
                charts.revenueDistribution = new Chart(revenueCtx, {
                    type: 'pie',
                    data: {
                        labels: topOems.map(([name]) => name.length > 15 ? name.substring(0, 15) + '...' : name),
                        datasets: [{
                            data: topOems.map(([, data]) => data.estimatedRevenue || 0),
                            backgroundColor: [
                                '#007bff', '#28a745', '#ffc107', '#dc3545', '#6c757d'
                            ],
                            borderWidth: 2,
                            borderColor: '#fff'
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'bottom'
                            }
                        }
                    }
                });
            }
        }

        function updateDetailedTables() {
            if (!analyticsData) return;

            // Update OEM Performance Table
            const oemTableBody = document.querySelector('#oemPerformanceTable tbody');
            oemTableBody.innerHTML = '';

            const oemData = analyticsData.projectsByOem || {};
            Object.entries(oemData).forEach(([oem, data]) => {
                const row = oemTableBody.insertRow();
                const marginPercentage = data.estimatedRevenue > 0 ? 
                    ((data.estimatedMargin || 0) / data.estimatedRevenue * 100) : 0;
                
                row.innerHTML = `
                    <td><strong>${oem.length > 25 ? oem.substring(0, 25) + '...' : oem}</strong></td>
                    <td>${data.count || 0}</td>
                    <td>${formatCurrency(data.estimatedRevenue || 0)}</td>
                    <td>
                        <div class="progress" style="height: 20px;">
                            <div class="progress-bar bg-${marginPercentage >= 20 ? 'success' : 
                                marginPercentage >= 10 ? 'warning' : 'danger'}" 
                                style="width: ${Math.min(marginPercentage, 100)}%">
                                ${marginPercentage.toFixed(1)}%
                            </div>
                        </div>
                    </td>
                `;
            });

            // Update Stage Analysis Table
            const stageTableBody = document.querySelector('#stageAnalysisTable tbody');
            stageTableBody.innerHTML = '';

            const stageData = analyticsData.projectsByStage || {};
            Object.entries(stageData).forEach(([stage, data]) => {
                const row = stageTableBody.insertRow();
                row.innerHTML = `
                    <td><strong>${stage}</strong></td>
                    <td>${data.count || 0}</td>
                    <td>${formatCurrency(data.estimatedRevenue || 0)}</td>
                    <td>
                        <span class="badge bg-${(data.averageConfidence || 0) >= 4 ? 'success' : 
                            (data.averageConfidence || 0) >= 3 ? 'info' : 
                            (data.averageConfidence || 0) >= 2 ? 'warning' : 'danger'}">
                            ${(data.averageConfidence || 0).toFixed(1)}/5
                        </span>
                    </td>
                `;
            });

            // Update High-Value Deals Table
            const dealsTableBody = document.querySelector('#highValueDealsTable tbody');
            dealsTableBody.innerHTML = '';

            const highValueDeals = analyticsData.highValueDeals || [];
            highValueDeals.forEach(deal => {
                const row = dealsTableBody.insertRow();
                row.innerHTML = `
                    <td><strong>${deal.productName || 'N/A'}</strong></td>
                    <td>${deal.clientName || 'N/A'}</td>
                    <td>${formatCurrency(deal.estimatedRevenue || 0)}</td>
                    <td>${formatCurrency(deal.weightedRevenue || 0)}</td>
                    <td>
                        <div class="progress" style="height: 20px;">
                            <div class="progress-bar bg-${(deal.successProbability || 0) >= 75 ? 'success' : 
                                (deal.successProbability || 0) >= 50 ? 'info' : 
                                (deal.successProbability || 0) >= 25 ? 'warning' : 'danger'}" 
                                style="width: ${deal.successProbability || 0}%">
                                ${deal.successProbability || 0}%
                            </div>
                        </div>
                    </td>
                    <td>
                        <span class="badge bg-${deal.pipelineStage === 'Closed Won' ? 'success' : 
                            deal.pipelineStage === 'Negotiation' ? 'warning' : 
                            deal.pipelineStage === 'Proposal' ? 'info' : 'secondary'}">
                            ${deal.pipelineStage || 'N/A'}
                        </span>
                    </td>
                    <td>
                        <span class="badge bg-primary">Active</span>
                    </td>
                    <td>
                        <a href="@Url.Action("Details")/${deal.projectPipelineId || 0}" class="btn btn-sm btn-outline-primary">
                            <i class="fas fa-eye"></i> View
                        </a>
                    </td>
                `;
            });

            if (highValueDeals.length === 0) {
                const row = dealsTableBody.insertRow();
                row.innerHTML = '<td colspan="8" class="text-center text-muted">No high-value deals found</td>';
            }
        }

        function updatePerformanceMetrics() {
            if (!analyticsData) return;

            document.getElementById('highConfidenceDeals').textContent = 
                analyticsData.pipelineHealth?.highConfidenceDeals || 0;
            
            document.getElementById('atRiskDeals').textContent = 
                analyticsData.pipelineHealth?.atRiskDeals || 0;
            
            document.getElementById('upcomingClosures').textContent = 
                analyticsData.upcomingClosures || 0;
            
            document.getElementById('projectsThisMonth').textContent = 
                analyticsData.projectsThisMonth || 0;
        }

        function refreshAllReports() {
            loadReportData();
        }

        function exportToPDF() {
            // Create a comprehensive report summary
            const reportSummary = {
                timestamp: new Date().toISOString(),
                totalPipelineValue: analyticsData?.totalEstimatedRevenue || 0,
                weightedRevenue: analyticsData?.totalWeightedRevenue || 0,
                activeProjects: analyticsData?.activeProjects || 0,
                averageSuccessRate: analyticsData?.averageSuccessProbability || 0,
                projectsByStage: analyticsData?.projectsByStage || {},
                projectsByOem: analyticsData?.projectsByOem || {},
                highValueDeals: analyticsData?.highValueDeals || []
            };

            // For now, download as JSON (in a real implementation, you'd generate a PDF)
            const dataStr = JSON.stringify(reportSummary, null, 2);
            const dataBlob = new Blob([dataStr], {type: 'application/json'});
            const url = URL.createObjectURL(dataBlob);
            const link = document.createElement('a');
            link.href = url;
            link.download = `desktop-pipeline-report-${new Date().toISOString().split('T')[0]}.json`;
            link.click();
            URL.revokeObjectURL(url);
        }

        function exportToExcel() {
            // Convert high-value deals to CSV format
            const deals = analyticsData?.highValueDeals || [];
            let csvContent = "Project,Client,Estimated Revenue,Weighted Revenue,Success Probability,Pipeline Stage\n";
            
            deals.forEach(deal => {
                csvContent += `"${deal.productName || ''}","${deal.clientName || ''}","${deal.estimatedRevenue || 0}","${deal.weightedRevenue || 0}","${deal.successProbability || 0}","${deal.pipelineStage || ''}"\n`;
            });

            const blob = new Blob([csvContent], { type: 'text/csv' });
            const url = URL.createObjectURL(blob);
            const link = document.createElement('a');
            link.href = url;
            link.download = `pipeline-deals-${new Date().toISOString().split('T')[0]}.csv`;
            link.click();
            URL.revokeObjectURL(url);
        }

        function exportToCSV() {
            exportToExcel(); // Same functionality for now
        }

        function showError(message) {
            const alertDiv = document.createElement('div');
            alertDiv.className = 'alert alert-danger alert-dismissible fade show';
            alertDiv.innerHTML = `
                <i class="fas fa-exclamation-triangle"></i> ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            document.querySelector('.container-fluid').insertBefore(alertDiv, document.querySelector('.row'));
        }

        function formatCurrency(amount) {
            return new Intl.NumberFormat('en-IN', {
                style: 'currency',
                currency: 'INR',
                minimumFractionDigits: 0,
                maximumFractionDigits: 0
            }).format(amount || 0);
        }
    </script>
}
            
            document.getElementById('successRate').textContent = 
                (reportData.PerformanceMetrics?.AverageSuccessRate || 0).toFixed(1) + '%';
        }

        function initializeCharts() {
            // Pipeline Stage Distribution Chart
            if (reportData.ProjectsByStage) {
                const ctx = document.getElementById('pipelineStageChart').getContext('2d');
                charts.stageChart = new Chart(ctx, {
                    type: 'doughnut',
                    data: {
                        labels: reportData.ProjectsByStage.map(s => s.Stage),
                        datasets: [{
                            data: reportData.ProjectsByStage.map(s => s.Count),
                            backgroundColor: ['#6c5ce7', '#00b894', '#0984e3', '#fdcb6e', '#e17055', '#a29bfe'],
                            borderWidth: 2,
                            borderColor: '#fff'
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'bottom'
                            }
                        }
                    }
                });
            }

            // OEM Revenue Chart
            if (reportData.ProjectsByOem) {
                const ctx = document.getElementById('oemRevenueChart').getContext('2d');
                charts.oemChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: reportData.ProjectsByOem.map(o => o.OemName),
                        datasets: [{
                            label: 'Revenue',
                            data: reportData.ProjectsByOem.map(o => o.Revenue),
                            backgroundColor: '#6c5ce7',
                            borderColor: '#5a4fcf',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    callback: function(value) {
                                        return new Intl.NumberFormat('en-IN', { 
                                            style: 'currency', 
                                            currency: 'INR',
                                            minimumFractionDigits: 0
                                        }).format(value);
                                    }
                                }
                            }
                        }
                    }
                });
            }

            // Monthly Trends Chart
            if (reportData.ProjectsByMonth) {
                const ctx = document.getElementById('monthlyTrendsChart').getContext('2d');
                charts.trendsChart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: reportData.ProjectsByMonth.map(m => m.Period),
                        datasets: [{
                            label: 'Projects Count',
                            data: reportData.ProjectsByMonth.map(m => m.Count),
                            borderColor: '#6c5ce7',
                            backgroundColor: 'rgba(108, 92, 231, 0.1)',
                            tension: 0.4
                        }, {
                            label: 'Revenue',
                            data: reportData.ProjectsByMonth.map(m => m.Revenue),
                            borderColor: '#00b894',
                            backgroundColor: 'rgba(0, 184, 148, 0.1)',
                            tension: 0.4,
                            yAxisID: 'y1'
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                type: 'linear',
                                display: true,
                                position: 'left',
                            },
                            y1: {
                                type: 'linear',
                                display: true,
                                position: 'right',
                                grid: {
                                    drawOnChartArea: false,
                                },
                            }
                        }
                    }
                });
            }
        }

        function updateDetailedData() {
            // This would typically load from the pipeline data
            // For now, we'll show a placeholder
            const tbody = document.getElementById('detailedDataBody');
            tbody.innerHTML = '<tr><td colspan="10" class="text-center text-muted">Loading detailed data...</td></tr>';
        }

        function refreshAllReports() {
            // Destroy existing charts
            Object.values(charts).forEach(chart => chart.destroy());
            charts = {};
            
            // Reload data
            loadReportData();
            showToast('Reports refreshed successfully!', 'success');
        }

        function exportToPDF() {
            showToast('PDF export functionality coming soon!', 'info');
        }

        function exportToExcel() {
            window.location.href = '/ProjectPipeline/ExportToExcel';
        }

        function exportToPowerPoint() {
            showToast('PowerPoint export functionality coming soon!', 'info');
        }

        function exportDetailedData(format) {
            showToast(`${format.toUpperCase()} export functionality coming soon!`, 'info');
        }

        function showToast(message, type = 'info') {
            const toast = document.createElement('div');
            toast.className = `alert alert-${type} alert-dismissible fade show position-fixed`;
            toast.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
            toast.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(toast);
            
            setTimeout(() => {
                if (toast.parentNode) {
                    toast.parentNode.removeChild(toast);
                }
            }, 4000);
        }
    </script>
}
