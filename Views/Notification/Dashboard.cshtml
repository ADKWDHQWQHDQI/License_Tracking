@using License_Tracking.Models
@model List<License_Tracking.Models.Alert>

@{
    ViewData["Title"] = "Notification Center";
}

@section Styles {
    <style>
        .alert-card {
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .alert-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        .priority-critical {
            border-left: 5px solid #dc3545;
        }

        .priority-high {
            border-left: 5px solid #fd7e14;
        }

        .priority-medium {
            border-left: 5px solid #ffc107;
        }

        .priority-low {
            border-left: 5px solid #6c757d;
        }

        .alert-overdue {
            background-color: #f8d7da;
        }

        .notification-stats .card {
            transition: all 0.3s ease;
        }

        .notification-stats .card:hover {
            transform: scale(1.05);
        }
    </style>
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="mb-0">
                    <i class="fas fa-bell text-warning"></i> Notification Center
                </h2>
                <div class="d-flex gap-2">
                    @if (User.IsInRole("Admin") || User.IsInRole("Operations"))
                    {
                        <button class="btn btn-primary" onclick="processEmailAlerts()">
                            <i class="fas fa-envelope"></i> Send Email Alerts
                        </button>
                        <button class="btn btn-info" onclick="generateRenewalAlerts()">
                            <i class="fas fa-calendar-alt"></i> Generate Renewal Alerts
                        </button>
                        <button class="btn btn-warning" onclick="generatePaymentAlerts()">
                            <i class="fas fa-dollar-sign"></i> Generate Payment Alerts
                        </button>
                    }
                    <button class="btn btn-success" onclick="refreshAlerts()">
                        <i class="fas fa-sync-alt"></i> Refresh
                    </button>
                    <button class="btn btn-outline-info" onclick="showLicenseExpiryData()">
                        <i class="fas fa-chart-pie"></i> Expiry Overview
                    </button>
                </div>
            </div>

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-exclamation-triangle"></i> @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <!-- Alert Statistics -->
            <div class="row mb-4 notification-stats">
                <div class="col-md-2 col-sm-4 col-6 mb-3">
                    <div class="card text-center h-100">
                        <div class="card-body">
                            <i class="fas fa-exclamation-triangle fa-2x text-danger mb-2"></i>
                            <h3 class="card-title text-danger">@ViewBag.AlertStats.Critical</h3>
                            <p class="card-text small">Critical</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-2 col-sm-4 col-6 mb-3">
                    <div class="card text-center h-100">
                        <div class="card-body">
                            <i class="fas fa-exclamation-circle fa-2x text-warning mb-2"></i>
                            <h3 class="card-title text-warning">@ViewBag.AlertStats.High</h3>
                            <p class="card-text small">High</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-2 col-sm-4 col-6 mb-3">
                    <div class="card text-center h-100">
                        <div class="card-body">
                            <i class="fas fa-info-circle fa-2x text-info mb-2"></i>
                            <h3 class="card-title text-info">@ViewBag.AlertStats.Medium</h3>
                            <p class="card-text small">Medium</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-2 col-sm-4 col-6 mb-3">
                    <div class="card text-center h-100">
                        <div class="card-body">
                            <i class="fas fa-minus-circle fa-2x text-secondary mb-2"></i>
                            <h3 class="card-title text-secondary">@ViewBag.AlertStats.Low</h3>
                            <p class="card-text small">Low</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-2 col-sm-4 col-6 mb-3">
                    <div class="card text-center h-100">
                        <div class="card-body">
                            <i class="fas fa-clock fa-2x text-danger mb-2"></i>
                            <h3 class="card-title text-danger">@ViewBag.AlertStats.Overdue</h3>
                            <p class="card-text small">Overdue</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-2 col-sm-4 col-6 mb-3">
                    <div class="card text-center h-100">
                        <div class="card-body">
                            <i class="fas fa-bell fa-2x text-primary mb-2"></i>
                            <h3 class="card-title text-primary">@ViewBag.AlertStats.TotalPending</h3>
                            <p class="card-text small">Total</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Filter Tabs -->
            <div class="card mb-4">
                <div class="card-header">
                    <ul class="nav nav-tabs card-header-tabs" id="alertTabs" role="tablist">
                        <li class="nav-item" role="presentation">
                            <button class="nav-link active" id="all-tab" data-bs-toggle="tab"
                                data-bs-target="#all-alerts" type="button" role="tab">
                                <i class="fas fa-list"></i> All Alerts (@Model.Count)
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="renewal-tab" data-bs-toggle="tab"
                                data-bs-target="#renewal-alerts" type="button" role="tab">
                                <i class="fas fa-calendar-alt"></i> Renewals (@ViewBag.AlertStats.RenewalAlerts)
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="pipeline-tab" data-bs-toggle="tab"
                                data-bs-target="#pipeline-alerts" type="button" role="tab">
                                <i class="fas fa-project-diagram"></i> Pipeline (@ViewBag.AlertStats.PipelineAlerts)
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="overdue-tab" data-bs-toggle="tab"
                                data-bs-target="#overdue-alerts" type="button" role="tab">
                                <i class="fas fa-clock"></i> Overdue (@ViewBag.AlertStats.Overdue)
                            </button>
                        </li>
                    </ul>
                </div>

                <div class="card-body">
                    <div class="tab-content" id="alertTabContent">
                        <!-- All Alerts Tab -->
                        <div class="tab-pane fade show active" id="all-alerts" role="tabpanel">
                            @if (Model.Any())
                            {
                                <div id="alertsList">
                                    @foreach (var alert in Model)
                                    {
                                        <div class="card alert-card mb-3 priority-@alert.Priority.ToString().ToLower() @(alert.IsOverdue ? "alert-overdue" : "")"
                                            data-alert-id="@alert.AlertId">
                                            <div class="card-body">
                                                <div class="row align-items-center">
                                                    <div class="col-md-8">
                                                        <div class="d-flex align-items-center mb-2">
                                                            @switch (alert.AlertType)
                                                            {
                                                                case AlertType.Renewal:
                                                                    <i class="fas fa-calendar-alt text-primary me-2"></i>
                                                                    break;
                                                                case AlertType.PipelineReminder:
                                                                    <i class="fas fa-project-diagram text-success me-2"></i>
                                                                    break;
                                                                case AlertType.Payment:
                                                                    <i class="fas fa-dollar-sign text-warning me-2"></i>
                                                                    break;
                                                                default:
                                                                    <i class="fas fa-bell text-info me-2"></i>
                                                                    break;
                                                            }
                                                            <h5 class="card-title mb-0">@alert.Title</h5>
                                                            <span
                                                                class="badge bg-@GetPriorityBadgeClass(alert.Priority) ms-2">@alert.Priority</span>
                                                            @if (alert.IsOverdue)
                                                            {
                                                                <span class="badge bg-danger ms-1">Overdue</span>
                                                            }
                                                        </div>
                                                        <p class="card-text">@alert.AlertMessage</p>
                                                        <small class="text-muted">
                                                            <i class="fas fa-clock"></i> Created:
                                                            @alert.CreatedDate.ToString("MMM dd, yyyy HH:mm")
                                                            @if (alert.AlertDate != alert.CreatedDate)
                                                            {
                                                                <span class="ms-3"><i class="fas fa-calendar"></i> Alert Date:
                                                                    @alert.AlertDate.ToString("MMM dd, yyyy")</span>
                                                            }
                                                        </small>
                                                    </div>

                                                    <div class="col-md-4 text-end">
                                                        <div class="btn-group" role="group">
                                                            @if (alert.License != null)
                                                            {
                                                                <a asp-controller="License" asp-action="Details"
                                                                    asp-route-id="@alert.License.LicenseId"
                                                                    class="btn btn-outline-primary btn-sm">
                                                                    <i class="fas fa-eye"></i> View License
                                                                </a>
                                                            }
                                                            @if (alert.ProjectPipeline != null)
                                                            {
                                                                <a asp-controller="ProjectPipeline" asp-action="Details"
                                                                    asp-route-id="@alert.ProjectPipeline.ProjectPipelineId"
                                                                    class="btn btn-outline-success btn-sm">
                                                                    <i class="fas fa-eye"></i> View Project
                                                                </a>
                                                            }
                                                            <button class="btn btn-outline-secondary btn-sm"
                                                                onclick="markAsRead(@alert.AlertId)">
                                                                <i class="fas fa-check"></i> Mark Read
                                                            </button>
                                                            <button class="btn btn-outline-danger btn-sm"
                                                                onclick="dismissAlert(@alert.AlertId)">
                                                                <i class="fas fa-times"></i> Dismiss
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="text-center py-5">
                                    <div class="mb-4">
                                        <div class="d-inline-flex align-items-center justify-content-center bg-light rounded-circle"
                                            style="width: 120px; height: 120px;">
                                            <i class="fas fa-bell-slash fa-3x text-muted"></i>
                                        </div>
                                    </div>
                                    <h4 class="text-muted mb-3">No alerts available</h4>
                                    <p class="text-muted mb-4">All caught up! No pending notifications.</p>
                                    <div class="d-flex justify-content-center gap-2">
                                        <button class="btn btn-outline-primary btn-sm" onclick="refreshAlerts()">
                                            <i class="fas fa-sync-alt"></i> Refresh
                                        </button>
                                        <a class="btn btn-outline-success btn-sm" asp-controller="License"
                                            asp-action="Index">
                                            <i class="fas fa-plus"></i> View Licenses
                                        </a>
                                    </div>
                                </div>
                            }
                        </div>

                        <!-- Other tabs will load content dynamically -->
                        <div class="tab-pane fade" id="renewal-alerts" role="tabpanel">
                            <div class="text-center py-3">
                                <i class="fas fa-spinner fa-spin"></i> Loading renewal alerts...
                            </div>
                        </div>

                        <div class="tab-pane fade" id="pipeline-alerts" role="tabpanel">
                            <div class="text-center py-3">
                                <i class="fas fa-spinner fa-spin"></i> Loading pipeline alerts...
                            </div>
                        </div>

                        <div class="tab-pane fade" id="overdue-alerts" role="tabpanel">
                            <div class="text-center py-3">
                                <i class="fas fa-spinner fa-spin"></i> Loading overdue alerts...
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Auto-refresh alerts every 30 seconds
        setInterval(refreshAlerts, 30000);

        // Tab switching with dynamic loading
        $('#alertTabs button[data-bs-toggle="tab"]').on('shown.bs.tab', function (e) {
            const target = $(e.target).data('bs-target');

            if (target === '#renewal-alerts') {
                loadAlertsByType('Renewal', target);
            } else if (target === '#pipeline-alerts') {
                loadAlertsByType('PipelineReminder', target);
            } else if (target === '#overdue-alerts') {
                loadOverdueAlerts(target);
            }
        });

        function loadAlertsByType(alertType, target) {
            $(target).html('<div class="text-center py-3"><i class="fas fa-spinner fa-spin"></i> Loading...</div>');

            $.get('@Url.Action("GetAlertsByType", "Notification")', { alertType: alertType })
                .done(function (data) {
                    $(target).html(data);
                })
                .fail(function () {
                    $(target).html('<div class="alert alert-danger">Error loading alerts</div>');
                });
        }

        function loadOverdueAlerts(target) {
            $(target).html('<div class="text-center py-3"><i class="fas fa-spinner fa-spin"></i> Loading...</div>');

            // Load overdue alerts (this would need a separate endpoint)
            $.get('@Url.Action("GetAlertsByPriority", "Notification")', { priority: 'Critical' })
                .done(function (data) {
                    $(target).html(data);
                })
                .fail(function () {
                    $(target).html('<div class="alert alert-danger">Error loading overdue alerts</div>');
                });
        }

        function refreshAlerts() {
            location.reload();
        }

        function markAsRead(alertId) {
            $.post('@Url.Action("MarkAsRead", "Notification")', { alertId: alertId })
                .done(function (response) {
                    if (response.success) {
                        $(`[data-alert-id="${alertId}"]`).fadeOut(300, function () {
                            $(this).remove();
                        });
                        showToast('success', response.message);
                    } else {
                        showToast('error', response.message);
                    }
                })
                .fail(function () {
                    showToast('error', 'Error marking alert as read');
                });
        }

        function dismissAlert(alertId) {
            if (confirm('Are you sure you want to dismiss this alert?')) {
                $.post('@Url.Action("DismissAlert", "Notification")', { alertId: alertId })
                    .done(function (response) {
                        if (response.success) {
                            $(`[data-alert-id="${alertId}"]`).fadeOut(300, function () {
                                $(this).remove();
                            });
                            showToast('success', response.message);
                        } else {
                            showToast('error', response.message);
                        }
                    })
                    .fail(function () {
                        showToast('error', 'Error dismissing alert');
                    });
            }
        }

        function processEmailAlerts() {
            if (confirm('Send email notifications for all pending alerts?')) {
                const btn = event.target;
                const originalText = btn.innerHTML;
                btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Sending...';
                btn.disabled = true;

                $.post('@Url.Action("ProcessEmailAlerts", "Notification")')
                    .done(function () {
                        location.reload();
                    })
                    .fail(function () {
                        showToast('error', 'Error processing email alerts');
                        btn.innerHTML = originalText;
                        btn.disabled = false;
                    });
            }
        }

        function generateRenewalAlerts() {
            if (confirm('Generate renewal alerts for expiring licenses?')) {
                const btn = event.target;
                const originalText = btn.innerHTML;
                btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Generating...';
                btn.disabled = true;

                $.post('@Url.Action("GenerateRenewalAlerts", "Notification")')
                    .done(function (response) {
                        showToast('success', 'Renewal alerts generated successfully');
                        setTimeout(() => location.reload(), 1000);
                    })
                    .fail(function () {
                        showToast('error', 'Error generating renewal alerts');
                        btn.innerHTML = originalText;
                        btn.disabled = false;
                    });
            }
        }

        function generatePaymentAlerts() {
            if (confirm('Generate payment reminder alerts?')) {
                const btn = event.target;
                const originalText = btn.innerHTML;
                btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Generating...';
                btn.disabled = true;

                $.post('@Url.Action("GeneratePaymentAlerts", "Notification")')
                    .done(function (response) {
                        showToast('success', 'Payment alerts generated successfully');
                        setTimeout(() => location.reload(), 1000);
                    })
                    .fail(function () {
                        showToast('error', 'Error generating payment alerts');
                        btn.innerHTML = originalText;
                        btn.disabled = false;
                    });
            }
        }

        function showLicenseExpiryData() {
            $.get('@Url.Action("GetLicenseExpiryData", "Notification")')
                .done(function (data) {
                    if (data.success === false) {
                        showToast('error', data.message);
                        return;
                    }

                    var modalHtml = `
                            <div class="modal fade" id="expiryDataModal" tabindex="-1">
                                <div class="modal-dialog modal-lg">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title"><i class="fas fa-chart-pie"></i> License Expiry Overview</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                        </div>
                                        <div class="modal-body">
                                            <div class="row mb-4">
                                                <div class="col-md-3 text-center">
                                                    <div class="card bg-danger text-white">
                                                        <div class="card-body">
                                                            <h4>${data.ExpiringIn7Days}</h4>
                                                            <small>Expiring in 7 days</small>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-3 text-center">
                                                    <div class="card bg-warning text-white">
                                                        <div class="card-body">
                                                            <h4>${data.ExpiringIn30Days}</h4>
                                                            <small>Expiring in 30 days</small>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-3 text-center">
                                                    <div class="card bg-info text-white">
                                                        <div class="card-body">
                                                            <h4>${data.ExpiringIn45Days}</h4>
                                                            <small>Expiring in 45 days</small>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-3 text-center">
                                                    <div class="card bg-secondary text-white">
                                                        <div class="card-body">
                                                            <h4>${data.ExpiredLicenses}</h4>
                                                            <small>Already Expired</small>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row mb-4">
                                                <div class="col-md-6 text-center">
                                                    <div class="card bg-primary text-white">
                                                        <div class="card-body">
                                                            <h4>${data.PendingPayments}</h4>
                                                            <small>Pending Payments</small>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-6 text-center">
                                                    <div class="card bg-success text-white">
                                                        <div class="card-body">
                                                            <h4>$${data.TotalOutstanding.toLocaleString()}</h4>
                                                            <small>Outstanding Amount</small>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <h6>Licenses Expiring Soon:</h6>
                                            <div class="table-responsive">
                                                <table class="table table-sm">
                                                    <thead>
                                                        <tr>
                                                            <th>Product</th>
                                                            <th>Client</th>
                                                            <th>Expiry Date</th>
                                                            <th>Days Left</th>
                                                            <th>Status</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>`;

                    data.Licenses.forEach(function (license) {
                        var statusClass = license.DaysUntilExpiry < 0 ? 'danger' :
                            license.DaysUntilExpiry <= 7 ? 'danger' :
                                license.DaysUntilExpiry <= 30 ? 'warning' : 'info';
                        var statusText = license.DaysUntilExpiry < 0 ? 'EXPIRED' :
                            license.DaysUntilExpiry <= 7 ? 'CRITICAL' :
                                license.DaysUntilExpiry <= 30 ? 'WARNING' : 'OK';

                        modalHtml += `
                                                        <tr>
                                                            <td>${license.ProductName}</td>
                                                            <td>${license.ClientName}</td>
                                                            <td>${new Date(license.ExpiryDate).toLocaleDateString()}</td>
                                                            <td>${license.DaysUntilExpiry}</td>
                                                            <td><span class="badge bg-${statusClass}">${statusText}</span></td>
                                                        </tr>`;
                    });

                    modalHtml += `
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                            <a href="/License/Index" class="btn btn-primary">Manage Licenses</a>
                                        </div>
                                    </div>
                                </div>
                            </div>`;

                    // Remove existing modal and add new one
                    $('#expiryDataModal').remove();
                    $('body').append(modalHtml);
                    $('#expiryDataModal').modal('show');
                })
                .fail(function () {
                    showToast('error', 'Failed to load license expiry data');
                });
        }

        function showToast(type, message) {
            const toastClass = type === 'success' ? 'bg-success' : 'bg-danger';
            const toastHtml = `
                            <div class="toast align-items-center text-white ${toastClass} border-0" role="alert">
                                <div class="d-flex">
                                    <div class="toast-body">${message}</div>
                                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                                </div>
                            </div>
                        `;

            $('#toastContainer').html(toastHtml);
            const toast = new bootstrap.Toast($('.toast')[0]);
            toast.show();
        }
    </script>
}

<!-- Toast Container -->
<div id="toastContainer" class="position-fixed top-0 end-0 p-3" style="z-index: 11"></div>

@functions {
    string GetPriorityBadgeClass(License_Tracking.Models.AlertPriority priority)
    {
        return priority switch
        {
            License_Tracking.Models.AlertPriority.Critical => "danger",
            License_Tracking.Models.AlertPriority.High => "warning",
            License_Tracking.Models.AlertPriority.Medium => "info",
            License_Tracking.Models.AlertPriority.Low => "secondary",
            _ => "secondary"
        };
    }
}

    ?'danger':  var       ?'CRITICAL': </tr>`;

