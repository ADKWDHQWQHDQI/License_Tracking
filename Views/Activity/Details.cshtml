@using License_Tracking.Models
@model Activity

@{
    ViewData["Title"] = "Activity Details";
    ViewData["PageTitle"] = "Activity Details";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-header bg-info text-white">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-calendar-check"></i>
                        Activity Details
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-8">
                            <!-- Main Activity Information -->
                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <label class="fw-bold">Activity Type:</label>
                                    <span class="badge bg-primary ms-2">@Model.Type</span>
                                </div>
                                <div class="col-md-6">
                                    <label class="fw-bold">Status:</label>
                                    @{
                                        var statusClass = Model.Status switch {
                                            "Completed" => "bg-success",
                                            "In Progress" => "bg-warning",
                                            "Pending" => "bg-secondary",
                                            "Cancelled" => "bg-danger",
                                            "Deferred" => "bg-info",
                                            _ => "bg-secondary"
                                        };
                                    }
                                    <span class="badge @statusClass ms-2">@Model.Status</span>
                                </div>
                            </div>

                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <label class="fw-bold">Scheduled Date:</label>
                                    <p class="mb-0">@Model.ScheduledDate.ToString("MMM dd, yyyy hh:mm tt")</p>
                                </div>
                                <div class="col-md-6">
                                    <label class="fw-bold">Priority:</label>
                                    @{
                                        var priorityClass = Model.Priority switch {
                                            "Urgent" => "bg-danger",
                                            "High" => "bg-warning",
                                            "Medium" => "bg-info",
                                            "Low" => "bg-secondary",
                                            _ => "bg-secondary"
                                        };
                                    }
                                    <span class="badge @priorityClass ms-2">@Model.Priority</span>
                                </div>
                            </div>

                            <!-- Entity Association -->
                            @if (!string.IsNullOrEmpty(Model.EntityType))
                            {
                                <div class="row mb-3">
                                    <div class="col-12">
                                        <label class="fw-bold">Related Entity:</label>
                                        <div class="mt-1">
                                            <span class="badge bg-outline-primary">@Model.EntityType</span>
                                            @if (Model.EntityId.HasValue)
                                            {
                                                @if (Model.EntityType == "Deal")
                                                {
                                                    <a asp-controller="Deals" asp-action="Details" asp-route-id="@Model.EntityId" 
                                                       class="btn btn-sm btn-outline-primary ms-2">
                                                        <i class="fas fa-external-link-alt"></i>
                                                        View Deal
                                                    </a>
                                                }
                                                else if (Model.EntityType == "Company")
                                                {
                                                    <a asp-controller="Companies" asp-action="Details" asp-route-id="@Model.EntityId" 
                                                       class="btn btn-sm btn-outline-primary ms-2">
                                                        <i class="fas fa-external-link-alt"></i>
                                                        View Company
                                                    </a>
                                                }
                                            }
                                        </div>
                                    </div>
                                </div>
                            }

                            <!-- Subject and Description -->
                            <div class="mb-3">
                                <label class="fw-bold">Subject:</label>
                                <p class="mt-1">@Model.Subject</p>
                            </div>

                            @if (!string.IsNullOrEmpty(Model.Description))
                            {
                                <div class="mb-3">
                                    <label class="fw-bold">Description:</label>
                                    <div class="mt-1 p-3 bg-light rounded">
                                        @Html.Raw(Model.Description.Replace("\n", "<br>"))
                                    </div>
                                </div>
                            }

                            @if (!string.IsNullOrEmpty(Model.Notes))
                            {
                                <div class="mb-3">
                                    <label class="fw-bold">Notes:</label>
                                    <div class="mt-1 p-3 bg-light rounded">
                                        @Html.Raw(Model.Notes.Replace("\n", "<br>"))
                                    </div>
                                </div>
                            }

                            <!-- Action Buttons -->
                            <div class="d-flex gap-2 mt-4">
                                <a asp-action="Edit" asp-route-id="@Model.ActivityId" class="btn btn-warning">
                                    <i class="fas fa-edit"></i>
                                    Edit Activity
                                </a>
                                
                                @if (Model.Status != "Completed")
                                {
                                    <button type="button" class="btn btn-success" onclick="markCompleted(@Model.ActivityId)">
                                        <i class="fas fa-check"></i>
                                        Mark Completed
                                    </button>
                                }

                                <a asp-action="Index" class="btn btn-secondary">
                                    <i class="fas fa-arrow-left"></i>
                                    Back to List
                                </a>

                                <button type="button" class="btn btn-danger" onclick="deleteActivity(@Model.ActivityId)">
                                    <i class="fas fa-trash"></i>
                                    Delete
                                </button>
                            </div>
                        </div>

                        <!-- Activity Timeline Sidebar -->
                        <div class="col-md-4">
                            <div class="card bg-light">
                                <div class="card-header">
                                    <h6 class="card-title mb-0">
                                        <i class="fas fa-clock"></i>
                                        Activity Timeline
                                    </h6>
                                </div>
                                <div class="card-body">
                                    <div class="timeline">
                                        <div class="timeline-item">
                                            <div class="timeline-marker bg-primary"></div>
                                            <div class="timeline-content">
                                                <h6 class="timeline-title">Created</h6>
                                                <p class="timeline-text">@Model.CreatedDate.ToString("MMM dd, yyyy hh:mm tt")</p>
                                            </div>
                                        </div>

                                        @if (Model.UpdatedDate.HasValue && Model.UpdatedDate != Model.CreatedDate)
                                        {
                                            <div class="timeline-item">
                                                <div class="timeline-marker bg-warning"></div>
                                                <div class="timeline-content">
                                                    <h6 class="timeline-title">Last Updated</h6>
                                                    <p class="timeline-text">@Model.UpdatedDate.Value.ToString("MMM dd, yyyy hh:mm tt")</p>
                                                </div>
                                            </div>
                                        }

                                        @if (Model.CompletedDate.HasValue)
                                        {
                                            <div class="timeline-item">
                                                <div class="timeline-marker bg-success"></div>
                                                <div class="timeline-content">
                                                    <h6 class="timeline-title">Completed</h6>
                                                    <p class="timeline-text">@Model.CompletedDate.Value.ToString("MMM dd, yyyy hh:mm tt")</p>
                                                </div>
                                            </div>
                                        }

                                        <div class="timeline-item">
                                            <div class="timeline-marker bg-info"></div>
                                            <div class="timeline-content">
                                                <h6 class="timeline-title">Scheduled</h6>
                                                <p class="timeline-text">@Model.ScheduledDate.ToString("MMM dd, yyyy hh:mm tt")</p>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Quick Stats -->
                                    <div class="mt-3 pt-3 border-top">
                                        <h6><i class="fas fa-chart-pie"></i> Quick Stats</h6>
                                        @{
                                            var daysUntilScheduled = (Model.ScheduledDate - DateTime.Now).Days;
                                            var isOverdue = Model.ScheduledDate < DateTime.Now && Model.Status != "Completed";
                                        }

                                        @if (isOverdue)
                                        {
                                            <div class="alert alert-danger py-2">
                                                <i class="fas fa-exclamation-triangle"></i>
                                                <strong>Overdue</strong><br>
                                                @Math.Abs(daysUntilScheduled) days past due
                                            </div>
                                        }
                                        else if (daysUntilScheduled <= 1 && Model.Status != "Completed")
                                        {
                                            <div class="alert alert-warning py-2">
                                                <i class="fas fa-clock"></i>
                                                <strong>Due Soon</strong><br>
                                                Due @(daysUntilScheduled == 0 ? "today" : "tomorrow")
                                            </div>
                                        }
                                        else if (Model.Status == "Completed")
                                        {
                                            <div class="alert alert-success py-2">
                                                <i class="fas fa-check-circle"></i>
                                                <strong>Completed</strong>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .timeline {
        position: relative;
        padding-left: 1.5rem;
    }

    .timeline::before {
        content: '';
        position: absolute;
        left: 0.5rem;
        top: 0;
        bottom: 0;
        width: 2px;
        background: #dee2e6;
    }

    .timeline-item {
        position: relative;
        margin-bottom: 1.5rem;
    }

    .timeline-marker {
        position: absolute;
        left: -0.75rem;
        top: 0.25rem;
        width: 0.75rem;
        height: 0.75rem;
        border-radius: 50%;
        border: 2px solid white;
        z-index: 2;
    }

    .timeline-content {
        margin-left: 0.5rem;
    }

    .timeline-title {
        font-size: 0.875rem;
        font-weight: 600;
        margin-bottom: 0.25rem;
        color: #495057;
    }

    .timeline-text {
        font-size: 0.75rem;
        color: #6c757d;
        margin-bottom: 0;
    }
</style>

@section Scripts {
    <script>
        function markCompleted(activityId) {
            if (confirm('Mark this activity as completed?')) {
                $.post('/Activity/MarkCompleted/' + activityId)
                    .done(function() {
                        location.reload();
                    })
                    .fail(function() {
                        alert('Error marking activity as completed');
                    });
            }
        }

        function deleteActivity(activityId) {
            if (confirm('Are you sure you want to delete this activity? This action cannot be undone.')) {
                $.ajax({
                    url: '/Activity/Delete/' + activityId,
                    type: 'DELETE',
                    success: function() {
                        window.location.href = '@Url.Action("Index", "Activity")';
                    },
                    error: function() {
                        alert('Error deleting activity');
                    }
                });
            }
        }
    </script>
}
