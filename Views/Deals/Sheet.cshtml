@model IEnumerable<License_Tracking.Models.Deal>

@{
    ViewData["Title"] = "Deal Management - Sheet View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Bigin.com-Style Sheet View -->
<div class="bigin-sheet-container">
    <!-- Header with View Toggle -->
    <div class="sheet-header mb-4">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h1 class="bigin-page-title">
                    <i class="fas fa-table"></i> Deal Management
                </h1>
                <p class="bigin-subtitle mb-0">Sheet view - Comprehensive data grid with advanced filtering</p>
            </div>
            <div class="bigin-view-toggles">
                <div class="btn-group" role="group">
                    <a asp-action="Index" class="btn btn-outline-primary">
                        <i class="fas fa-list"></i> List View
                    </a>
                    <a asp-action="Kanban" class="btn btn-outline-primary">
                        <i class="fas fa-columns"></i> Kanban View
                    </a>
                    <button type="button" class="btn btn-primary active">
                        <i class="fas fa-table"></i> Sheet View
                    </button>
                </div>
                <div class="ms-3">
                    <a asp-action="Create" class="btn btn-success bigin-btn-primary">
                        <i class="fas fa-plus"></i> New Deal
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Quick Stats -->
    <div class="quick-stats mb-4">
        <div class="row">
            <div class="col-md-3">
                <div class="stat-card bg-primary">
                    <div class="stat-value">@Model.Count()</div>
                    <div class="stat-label">Total Deals</div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stat-card bg-success">
                    <div class="stat-value">@(Model.Where(d => d.CustomerInvoiceAmount.HasValue).Sum(d => d.CustomerInvoiceAmount!.Value).ToString("C0"))</div>
                    <div class="stat-label">Pipeline Value</div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stat-card bg-warning">
                    <div class="stat-value">@Model.Count(d => d.DealStage == "Won")</div>
                    <div class="stat-label">Won Deals</div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stat-card bg-info">
                    <div class="stat-value">@Model.Count(d => d.DealStage != "Won" && d.DealStage != "Lost")</div>
                    <div class="stat-label">Active Deals</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Advanced Filters -->
    <div class="card filter-card mb-4">
        <div class="card-header">
            <div class="d-flex justify-content-between align-items-center">
                <h6 class="mb-0"><i class="fas fa-filter"></i> Advanced Filters</h6>
                <button type="button" class="btn btn-sm btn-outline-secondary" onclick="toggleFilters()">
                    <i class="fas fa-chevron-down" id="filterToggleIcon"></i>
                </button>
            </div>
        </div>
        <div class="card-body" id="filterPanel" style="display: none;">
            <form method="get" class="row g-3">
                <div class="col-md-3">
                    <label class="form-label">Search</label>
                    <input type="text" name="search" class="form-control" placeholder="Deal name, company, product..." />
                </div>
                <div class="col-md-2">
                    <label class="form-label">Stage</label>
                    <select name="stage" class="form-select">
                        <option value="">All Stages</option>
                        <option value="Lead">Lead</option>
                        <option value="Qualified">Qualified</option>
                        <option value="Quoted">Quoted</option>
                        <option value="Negotiation">Negotiation</option>
                        <option value="Won">Won</option>
                        <option value="Lost">Lost</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <label class="form-label">Priority</label>
                    <select name="priority" class="form-select">
                        <option value="">All Priorities</option>
                        <option value="Critical">Critical</option>
                        <option value="High">High</option>
                        <option value="Medium">Medium</option>
                        <option value="Low">Low</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <label class="form-label">Assigned To</label>
                    <select name="assignedTo" class="form-select">
                        <option value="">All Assignees</option>
                        <option value="@(User.Identity?.Name ?? "")">My Deals</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <label class="form-label">Date Range</label>
                    <select name="dateRange" class="form-select">
                        <option value="">All Dates</option>
                        <option value="today">Today</option>
                        <option value="week">This Week</option>
                        <option value="month">This Month</option>
                        <option value="quarter">This Quarter</option>
                    </select>
                </div>
                <div class="col-md-1">
                    <label class="form-label">&nbsp;</label>
                    <button type="submit" class="btn btn-primary w-100">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Sheet Data Grid -->
    <div class="card sheet-card">
        <div class="card-header">
            <div class="d-flex justify-content-between align-items-center">
                <h6 class="mb-0">
                    <i class="fas fa-table"></i> 
                    Deal Data Grid (@Model.Count() records)
                </h6>
                <div class="sheet-actions">
                    <button type="button" class="btn btn-sm btn-outline-secondary" onclick="exportSheet()">
                        <i class="fas fa-download"></i> Export
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-secondary" onclick="selectAll()">
                        <i class="fas fa-check-square"></i> Select All
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-danger" onclick="bulkDelete()" disabled id="bulkDeleteBtn">
                        <i class="fas fa-trash"></i> Bulk Delete
                    </button>
                </div>
            </div>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-sm table-hover bigin-sheet-table mb-0" id="dealsTable">
                    <thead class="table-light sticky-top">
                        <tr>
                            <th width="40">
                                <input type="checkbox" class="form-check-input" id="selectAllCheckbox" onchange="toggleSelectAll()">
                            </th>
                            <th width="80">
                                <button class="btn btn-sm btn-link text-start p-0 fw-semibold" onclick="sortBy('DealId')">
                                    ID <i class="fas fa-sort"></i>
                                </button>
                            </th>
                            <th width="200">
                                <button class="btn btn-sm btn-link text-start p-0 fw-semibold" onclick="sortBy('DealName')">
                                    Deal Name <i class="fas fa-sort"></i>
                                </button>
                            </th>
                            <th width="120">
                                <button class="btn btn-sm btn-link text-start p-0 fw-semibold" onclick="sortBy('DealStage')">
                                    Stage <i class="fas fa-sort"></i>
                                </button>
                            </th>
                            <th width="100">
                                <button class="btn btn-sm btn-link text-start p-0 fw-semibold" onclick="sortBy('Priority')">
                                    Priority <i class="fas fa-sort"></i>
                                </button>
                            </th>
                            <th width="180">
                                <button class="btn btn-sm btn-link text-start p-0 fw-semibold" onclick="sortBy('Company')">
                                    Company <i class="fas fa-sort"></i>
                                </button>
                            </th>
                            <th width="150">
                                <button class="btn btn-sm btn-link text-start p-0 fw-semibold" onclick="sortBy('Product')">
                                    Product <i class="fas fa-sort"></i>
                                </button>
                            </th>
                            <th width="120">
                                <button class="btn btn-sm btn-link text-start p-0 fw-semibold" onclick="sortBy('Oem')">
                                    OEM <i class="fas fa-sort"></i>
                                </button>
                            </th>
                            <th width="80">
                                <button class="btn btn-sm btn-link text-start p-0 fw-semibold" onclick="sortBy('Quantity')">
                                    Qty <i class="fas fa-sort"></i>
                                </button>
                            </th>
                            <th width="120">
                                <button class="btn btn-sm btn-link text-start p-0 fw-semibold" onclick="sortBy('CustomerInvoiceAmount')">
                                    Value <i class="fas fa-sort"></i>
                                </button>
                            </th>
                            <th width="120">
                                <button class="btn btn-sm btn-link text-start p-0 fw-semibold" onclick="sortBy('AssignedTo')">
                                    Assigned To <i class="fas fa-sort"></i>
                                </button>
                            </th>
                            <th width="120">
                                <button class="btn btn-sm btn-link text-start p-0 fw-semibold" onclick="sortBy('ExpectedCloseDate')">
                                    Close Date <i class="fas fa-sort"></i>
                                </button>
                            </th>
                            <th width="80">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            @foreach (var deal in Model)
                            {
                                <tr class="deal-row" data-deal-id="@deal.DealId">
                                    <td>
                                        <input type="checkbox" class="form-check-input deal-checkbox" value="@deal.DealId">
                                    </td>
                                    <td>
                                        <span class="badge bg-light text-dark">#@deal.DealId</span>
                                    </td>
                                    <td>
                                        <div class="deal-name-cell">
                                            <a asp-action="Details" asp-route-id="@deal.DealId" class="text-decoration-none fw-semibold">
                                                @deal.DealName
                                            </a>
                                            @if (!string.IsNullOrEmpty(deal.DealType))
                                            {
                                                <small class="text-muted d-block">@deal.DealType</small>
                                            }
                                        </div>
                                    </td>
                                    <td>
                                        @{
                                            var stageClass = deal.DealStage switch
                                            {
                                                "Lead" => "badge bg-primary",
                                                "Qualified" => "badge bg-info", 
                                                "Quoted" => "badge bg-warning",
                                                "Negotiation" => "badge bg-secondary",
                                                "Won" => "badge bg-success",
                                                "Lost" => "badge bg-danger",
                                                _ => "badge bg-light text-dark"
                                            };
                                        }
                                        <span class="@stageClass">@deal.DealStage</span>
                                    </td>
                                    <td>
                                        @{
                                            var priorityClass = deal.Priority?.ToLower() switch
                                            {
                                                "critical" => "badge bg-danger",
                                                "high" => "badge bg-warning",
                                                "medium" => "badge bg-info",
                                                "low" => "badge bg-secondary",
                                                _ => "badge bg-light text-dark"
                                            };
                                        }
                                        <span class="@priorityClass">@(deal.Priority ?? "Medium")</span>
                                    </td>
                                    <td>
                                        <div class="company-cell">
                                            <strong>@deal.Company?.CompanyName</strong>
                                            @if (deal.ContactPerson != null)
                                            {
                                                <small class="text-muted d-block">@deal.ContactPerson.Name</small>
                                            }
                                        </div>
                                    </td>
                                    <td>
                                        <span title="@deal.Product?.ProductDescription">@deal.Product?.ProductName</span>
                                    </td>
                                    <td>
                                        <span>@deal.Oem?.OemName</span>
                                    </td>
                                    <td>
                                        <span class="fw-semibold">@deal.Quantity</span>
                                    </td>
                                    <td>
                                        @if (deal.CustomerInvoiceAmount.HasValue)
                                        {
                                            <span class="fw-semibold text-success">@deal.CustomerInvoiceAmount.Value.ToString("C0")</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">TBD</span>
                                        }
                                    </td>
                                    <td>
                                        <span class="text-muted">@(deal.AssignedTo ?? "Unassigned")</span>
                                    </td>
                                    <td>
                                        @if (deal.ExpectedCloseDate.HasValue)
                                        {
                                            var isOverdue = deal.ExpectedCloseDate < DateTime.Now && deal.DealStage != "Won" && deal.DealStage != "Lost";
                                            <span class="@(isOverdue ? "text-danger fw-semibold" : "")">
                                                @deal.ExpectedCloseDate.Value.ToString("MMM dd, yyyy")
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">Not set</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group btn-group-sm">
                                            <a asp-action="Details" asp-route-id="@deal.DealId" class="btn btn-outline-primary btn-sm" title="View Details">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <a asp-action="Edit" asp-route-id="@deal.DealId" class="btn btn-outline-secondary btn-sm" title="Edit">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <div class="dropdown">
                                                <button class="btn btn-outline-secondary btn-sm dropdown-toggle" data-bs-toggle="dropdown" title="More Actions">
                                                    <i class="fas fa-ellipsis-v"></i>
                                                </button>
                                                <ul class="dropdown-menu">
                                                    <li><a class="dropdown-item" asp-action="Details" asp-route-id="@deal.DealId">
                                                        <i class="fas fa-eye"></i> View Details</a></li>
                                                    <li><a class="dropdown-item" asp-action="Edit" asp-route-id="@deal.DealId">
                                                        <i class="fas fa-edit"></i> Edit Deal</a></li>
                                                    <li><hr class="dropdown-divider"></li>
                                                    <li><a class="dropdown-item" onclick="duplicateDeal(@deal.DealId)">
                                                        <i class="fas fa-copy"></i> Duplicate</a></li>
                                                    <li><a class="dropdown-item text-danger" onclick="deleteDeal(@deal.DealId)">
                                                        <i class="fas fa-trash"></i> Delete</a></li>
                                                </ul>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="13" class="text-center py-5">
                                    <div class="empty-state">
                                        <i class="fas fa-handshake fa-3x text-muted mb-3"></i>
                                        <h5 class="text-muted">No deals found</h5>
                                        <p class="text-muted">Create your first deal to get started</p>
                                        <a asp-action="Create" class="btn btn-primary">
                                            <i class="fas fa-plus"></i> Create New Deal
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Bigin.com-Style Sheet CSS -->
<style>
/* Bigin.com-Inspired Sheet Styles */
.bigin-sheet-container {
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    min-height: 100vh;
    padding: 1.5rem;
}

.bigin-page-title {
    font-size: 1.8rem;
    font-weight: 700;
    color: #2d3436;
    margin-bottom: 0.5rem;
}

.bigin-subtitle {
    color: #636e72;
    font-size: 1rem;
}

.bigin-view-toggles .btn-group .btn {
    border-radius: 8px;
    margin-right: 4px;
    font-weight: 500;
    transition: all 0.3s ease;
}

.bigin-btn-primary {
    background: linear-gradient(135deg, #6c5ce7 0%, #5a67d8 100%);
    border: none;
    border-radius: 8px;
    font-weight: 600;
    padding: 0.6rem 1.2rem;
    transition: all 0.3s ease;
}

.bigin-btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(108, 92, 231, 0.3);
}

.quick-stats .stat-card {
    background: white;
    border-radius: 8px;
    padding: 1.5rem;
    text-align: center;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
    transition: all 0.3s ease;
    color: white;
}

.quick-stats .stat-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

.stat-value {
    font-size: 1.5rem;
    font-weight: 700;
    margin-bottom: 0.5rem;
}

.stat-label {
    font-size: 0.9rem;
    opacity: 0.9;
}

.filter-card, .sheet-card {
    border: none;
    border-radius: 12px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
}

.bigin-sheet-table {
    font-size: 0.9rem;
}

.bigin-sheet-table th {
    border-bottom: 2px solid #e9ecef;
    font-weight: 600;
    background: #f8f9fa !important;
    padding: 1rem 0.75rem;
}

.bigin-sheet-table th button {
    text-decoration: none;
    color: #2d3436;
    border: none;
    background: none;
    font-weight: 600;
    width: 100%;
    text-align: left;
}

.bigin-sheet-table th button:hover {
    color: #6c5ce7;
}

.bigin-sheet-table td {
    padding: 0.75rem;
    vertical-align: middle;
    border-bottom: 1px solid #f1f3f4;
}

.deal-row:hover {
    background-color: #f8f9fa;
}

.deal-name-cell .fw-semibold {
    color: #2d3436;
    font-size: 0.95rem;
}

.deal-name-cell .fw-semibold:hover {
    color: #6c5ce7;
    text-decoration: underline !important;
}

.company-cell strong {
    font-size: 0.9rem;
    color: #2d3436;
}

.empty-state {
    padding: 2rem;
}

.sheet-actions .btn {
    margin-left: 0.5rem;
}

/* Responsive adjustments */
@@media (max-width: 1200px) {
    .bigin-sheet-table {
        font-size: 0.8rem;
    }
    
    .bigin-sheet-table th,
    .bigin-sheet-table td {
        padding: 0.5rem;
    }
}

@@media (max-width: 768px) {
    .quick-stats .stat-card {
        margin-bottom: 1rem;
    }
    
    .bigin-view-toggles {
        margin-top: 1rem;
    }
    
    .bigin-view-toggles .btn-group {
        width: 100%;
    }
    
    .bigin-view-toggles .btn {
        flex: 1;
    }
}
</style>

<!-- Sheet JavaScript -->
<script>
let sortDirection = {};

function toggleFilters() {
    const filterPanel = document.getElementById('filterPanel');
    const icon = document.getElementById('filterToggleIcon');
    
    if (filterPanel.style.display === 'none') {
        filterPanel.style.display = 'block';
        icon.className = 'fas fa-chevron-up';
    } else {
        filterPanel.style.display = 'none';
        icon.className = 'fas fa-chevron-down';
    }
}

function sortBy(column) {
    // Toggle sort direction
    sortDirection[column] = sortDirection[column] === 'asc' ? 'desc' : 'asc';
    
    // Get table and rows
    const table = document.getElementById('dealsTable');
    const tbody = table.querySelector('tbody');
    const rows = Array.from(tbody.querySelectorAll('tr:not(.empty-state)'));
    
    // Sort rows
    rows.sort((a, b) => {
        let aVal = '', bVal = '';
        
        switch(column) {
            case 'DealId':
                aVal = parseInt(a.dataset.dealId);
                bVal = parseInt(b.dataset.dealId);
                break;
            case 'DealName':
                aVal = a.querySelector('td:nth-child(3) a').textContent.trim();
                bVal = b.querySelector('td:nth-child(3) a').textContent.trim();
                break;
            case 'DealStage':
                aVal = a.querySelector('td:nth-child(4) span').textContent.trim();
                bVal = b.querySelector('td:nth-child(4) span').textContent.trim();
                break;
            case 'Company':
                aVal = a.querySelector('td:nth-child(6) strong').textContent.trim();
                bVal = b.querySelector('td:nth-child(6) strong').textContent.trim();
                break;
            // Add more cases as needed
        }
        
        if (typeof aVal === 'number' && typeof bVal === 'number') {
            return sortDirection[column] === 'asc' ? aVal - bVal : bVal - aVal;
        } else {
            return sortDirection[column] === 'asc' ? 
                aVal.localeCompare(bVal) : bVal.localeCompare(aVal);
        }
    });
    
    // Re-append sorted rows
    rows.forEach(row => tbody.appendChild(row));
}

function toggleSelectAll() {
    const masterCheckbox = document.getElementById('selectAllCheckbox');
    const checkboxes = document.querySelectorAll('.deal-checkbox');
    
    checkboxes.forEach(checkbox => {
        checkbox.checked = masterCheckbox.checked;
    });
    
    updateBulkActions();
}

function selectAll() {
    const checkboxes = document.querySelectorAll('.deal-checkbox');
    const masterCheckbox = document.getElementById('selectAllCheckbox');
    
    checkboxes.forEach(checkbox => {
        checkbox.checked = true;
    });
    masterCheckbox.checked = true;
    
    updateBulkActions();
}

function updateBulkActions() {
    const selected = document.querySelectorAll('.deal-checkbox:checked');
    const bulkDeleteBtn = document.getElementById('bulkDeleteBtn');
    
    if (selected.length > 0) {
        bulkDeleteBtn.disabled = false;
        bulkDeleteBtn.textContent = `Delete ${selected.length} deals`;
    } else {
        bulkDeleteBtn.disabled = true;
        bulkDeleteBtn.innerHTML = '<i class="fas fa-trash"></i> Bulk Delete';
    }
}

function exportSheet() {
    window.location.href = '/Deals/ExportExcel';
}

function duplicateDeal(dealId) {
    if (confirm('Are you sure you want to duplicate this deal?')) {
        // Implementation for deal duplication
        console.log('Duplicating deal:', dealId);
    }
}

function deleteDeal(dealId) {
    if (confirm('Are you sure you want to delete this deal? This action cannot be undone.')) {
        // Implementation for deal deletion
        console.log('Deleting deal:', dealId);
    }
}

function bulkDelete() {
    const selected = Array.from(document.querySelectorAll('.deal-checkbox:checked'))
                          .map(cb => cb.value);
    
    if (selected.length > 0 && confirm(`Are you sure you want to delete ${selected.length} deals? This action cannot be undone.`)) {
        // Implementation for bulk deletion
        console.log('Bulk deleting deals:', selected);
    }
}

// Initialize event listeners
document.addEventListener('DOMContentLoaded', function() {
    // Add change listeners to all deal checkboxes
    document.querySelectorAll('.deal-checkbox').forEach(checkbox => {
        checkbox.addEventListener('change', updateBulkActions);
    });
});
</script>
